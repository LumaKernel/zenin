Next.jsでウェブページを開くと次のエラーが発生している。これを解消せよ。


======

Runtime Error

Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

See more info here: https://nextjs.org/docs/messages/react-hydration-error

  ...
    <HotReload assetPrefix="" globalError={[...]}>
      <AppDevOverlay state={{nextId:1, ...}} globalError={[...]}>
        <AppDevOverlayErrorBoundary globalError={[...]} onError={function bound dispatchSetState}>
          <ReplaySsrOnlyErrors>
          <DevRootHTTPAccessFallbackBoundary>
            <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>
              <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<NotAllowedRootHTTPFallbackError>} ...>
                <RedirectBoundary>
                  <RedirectErrorBoundary router={{...}}>
                    <Head>
                    <link>
                    <ClientSegmentRoot Component={function RootLayout} slots={{...}} params={{}}>
                      <RootLayout params={Promise}>
                        <html
                          lang="ja"
-                         data-mantine-color-scheme="dark"
                        >
                          <head>
                          ...
                            <@mantine/core/Box component="span" mod={{...}} className="m_8d3afb97..." style={{}}>
                              <span ref={null} style={{}} className="m_8d3afb97..." data-variant={undefined} ...>
                                <IconDeviceDesktop size={18}>
                                  <svg
                                    ref={null}
                                    xmlns="http://www.w3.org/2000/svg"
                                    width={18}
                                    height={18}
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    strokeWidth={2}
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
+                                   className={"tabler-icon tabler-icon-device-desktop "}
-                                   className={"tabler-icon tabler-icon-sun "}
                                  >
                                    <path
+                                     d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"
-                                     d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"
                                    >
                                    <path
+                                     d="M7 20h10"
-                                     d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12..."
                                    >
+                                   <path d="M9 16v4">
                                    ...
                    ...
        ...

src/components/theme-toggle.tsx (19:13) @ ThemeToggle

  17 |             <IconSun size={18} />
  18 |           ) : (
> 19 |             <IconDeviceDesktop size={18} />
     |             ^
  20 |           )}
  21 |         </ActionIcon>
  22 |       </Menu.Target>

Call Stack 15
Show 12 ignore-listed frame(s)
path
unknown (0:0)
ThemeToggle
src/components/theme-toggle.tsx (19:13)
Home
src/app/page.tsx (32:11)
